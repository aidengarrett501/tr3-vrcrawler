import axios from "axios";
import { DISCORD_WEBHOOK_URL } from "../config/config.js";

// ? Format time nicely
function formatTime(dateString) {
  const date = new Date(dateString);
  return date.toLocaleString("en-US", { timeZoneName: "short" });
}

// ? Format duration in HH:MM:SS
function formatDuration(seconds) {
  const hrs = Math.floor(seconds / 3600);
  const mins = Math.floor((seconds % 3600) / 60);
  const secs = seconds % 60;
  return `${hrs.toString().padStart(2, "0")}:${mins
    .toString()
    .padStart(2, "0")}:${secs.toString().padStart(2, "0")}`;
}

// ? Generate the proper profile link
function getProfileLink(membershipType, membershipId, activityType, fireteamSize) {
  const platformMap = { 1: "xb", 2: "ps", 3: "pc" }; // Xbox, PlayStation, Steam/PC
  const platform = platformMap[membershipType] || "pc";

  if (activityType === "dungeon") {
    return `https://dungeon.report/${platform}/${membershipId}`;
  } else if (activityType === "raid") {
    if (fireteamSize <= 3) {
      return `https://lowman-central.com/Profiles/${membershipType}/${membershipId}`;
    } else {
      return `https://raid.report/${platform}/${membershipId}`;
    }
  } else {
    return null; // No link for non-raid/dungeon
  }
}

// ? Send Enhanced PGCR to Discord
export async function sendToDiscord(activityName, activityId, pgcr, isFlawless, startTime, durationSeconds, activityType) {
  try {
    console.log(`?? Preparing to send PGCR for ${activityName}...`);

    const fireteamSize = pgcr.entries.length;
    const startFormatted = formatTime(startTime);
    const endFormatted = formatTime(new Date(new Date(startTime).getTime() + durationSeconds * 1000));
    const totalDuration = formatDuration(durationSeconds);

    // ? Star emoji for flawless
    const flawlessEmoji = isFlawless ? "?" : "";

    const playerFields = pgcr.entries.map((entry) => {
      const {
        displayName,
        membershipId,
        membershipType,
      } = entry.player.destinyUserInfo;

      const kills = entry.values.kills.basic.value.toFixed(0);
      const deaths = entry.values.deaths.basic.value.toFixed(0);
      const kd = entry.values.killsDeathsRatio.basic.value.toFixed(2);

      // ? Get the profile link
      const profileLink = getProfileLink(membershipType, membershipId, activityType, fireteamSize);

      const playerName = profileLink
        ? `[${displayName}](${profileLink})`
        : displayName;

      return {
        name: playerName,
        value: `Kills: ${kills} | Deaths: ${deaths} | K/D: ${kd}`,
        inline: true,
      };
    });

    // ? Build the Discord embed
    const embed = {
      title: `${flawlessEmoji} ${activityName}`,
      url: `https://raid.report/${pgcr.entries[0].player.destinyUserInfo.membershipId}/pgcr/${activityId}`, // Link to raid.report
      color: isFlawless ? 0xffd700 : 0xff3300, // Gold for flawless, red otherwise
      fields: [
        { name: "Start Time", value: startFormatted, inline: true },
        { name: "End Time", value: endFormatted, inline: true },
        { name: "Total Duration", value: totalDuration, inline: true },
        { name: "\u200B", value: "\u200B" }, // Empty spacer
        ...playerFields, // Players and their stats
      ],
      footer: { text: "Generated by Bungie API" },
    };

    // ? Send to Discord
    console.log("?? Sending PGCR to Discord...");
    const response = await axios.post(DISCORD_WEBHOOK_URL, {
      username: "Destiny 2 PGCR",
      embeds: [embed],
    });

    if (response.status === 204) {
      console.log(`? Successfully sent PGCR for ${activityName} to Discord`);
    } else {
      console.error(`? Discord webhook responded with unexpected status: ${response.status}`);
    }
  } catch (error) {
    console.error("? Discord webhook error:", error.response?.data || error.message);
  }
}

// ? Send Leaderboard to Discord
export async function sendLeaderboardToDiscord(leaderboard) {
  try {
    const embed = {
      title: "?? Destiny 2 Leaderboard",
      color: 0x00ff00,
      fields: leaderboard.map((player, index) => ({
        name: `#${index + 1} — ${player.displayName}`,
        value: `K/D: ${player.kd.toFixed(2)} | Kills: ${player.kills} | Deaths: ${player.deaths}`,
      })),
      footer: { text: "Generated by Destiny 2 Tracker" },
    };

    console.log("?? Sending Leaderboard to Discord...");
    const response = await axios.post(DISCORD_WEBHOOK_URL, {
      username: "tr3-vr crawler",
      embeds: [embed],
    });

    if (response.status === 204) {
      console.log("? Successfully sent Leaderboard to Discord");
    } else {
      console.error(`? Discord webhook responded with unexpected status: ${response.status}`);
    }
  } catch (error) {
    console.error("? Discord leaderboard error:", error.response?.data || error.message);
  }
}